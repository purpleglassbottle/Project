const express = require('express');
const session = require('express-session');
const bodyParser = require('body-parser');

const app = express();
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

// Initialize session management
app.use(session({
  secret: 'your_secret_key', // replace with a strong secret key
  resave: false,
  saveUninitialized: false,
}));

// Example user database (usually in a real database)
const users = [
  { username: 'user1', password: 'password1' },
  { username: 'user2', password: 'password2' },
];

// Login endpoint
app.post('/login', (req, res) => {
  const { username, password } = req.body;
  const user = users.find(u => u.username === username && u.password === password);
  if (user) {
    req.session.user = user;
    res.redirect('/create-session'); // Redirect to the intended page
  } else {
    res.status(401).send('Invalid credentials');
  }
});

// Middleware to check authentication
function requireAuth(req, res, next) {
  if (req.session.user) {
    next(); // User is logged in, proceed to the requested page
  } else {
    res.redirect('/login'); // Redirect to login if not authenticated
  }
}

// Route for creating a session, requiring authentication
app.get('/create-session', requireAuth, (req, res) => {
  res.sendFile(__dirname + '/create-session.html'); // Serve the create-session page
});

// Route for login page
app.get('/login', (req, res) => {
  res.sendFile(__dirname + '/login.html'); // Serve the login page
});

app.listen(3000, () => {
  console.log('Server is running on http://localhost:3000');
});